---
name: Build Images

on:
  schedule:
    - cron: "0 16 * * 6"
  workflow_dispatch:
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: checout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all history for all tags

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: get information
        run: |
          echo "MC_VERSION=$( npm show meshcentral version)" >> $GITHUB_ENV
          echo "MC_TAG=$( git describe --tags --abbrev=0 --match img*)" >> $GITHUB_ENV

      - name: set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: install buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: login to github
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: build and export to docker
        uses: docker/build-push-action@v6
        with:
          load: true
          context: ./builds/regular
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.MC_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.MC_VERSION }}-${{ env.MC_TAG }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: test image
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest --help

      - name: build and push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ./builds/regular
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.MC_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.MC_VERSION }}-${{ env.MC_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
